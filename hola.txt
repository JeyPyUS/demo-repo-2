# Getting the general configuration in Common for the connection to Infinity database
    conn_redshift_dict = cfg.read_section(section='redshift_infinity_' + environment)

    # Getting the general configuration in Common for the connection to Aurora database
    conn_aurora_dict = cfg.read_section(section='aurora_datamarts_' + environment)

    # Creating the connection to Infinity database
    engine_redshift = db_utils.get_engine_redshift(conn_redshift_dict)

    # Creating the connection to Aurora database
    engine_aurora = db_utils.get_engine_redshift(conn_aurora_dict)

    # Checking the connection and getting metadata information for the tables that we are going to use
    try:
        connection_redshift = engine_redshift.connect()
        connection_aurora = engine_aurora.connect()
        meta_redshift = MetaData(connection_redshift)
        meta_aurora = MetaData(connection_aurora)
        meta_redshift.reflect(bind=engine_redshift, schema=stg_schema, only=[stg_table])
        meta_redshift.reflect(bind=engine_redshift, schema=dwh_schema, only=[dwh_table, dwh_table_factsheet])
        meta_aurora.reflect(bind=engine_aurora, schema=dtm_schema, only=[dtm_table, dtm_table_factsheet])
    except Exception as e:
        logger.error(f'Script stopped in {time()-starttime} seconds due to an error on the connection to the database.\nError: {e}')
        return None
