def __prepare_sql_columns(alias, cols, agg = None, tagline = None):
    '''
    Method which takes the columns in the list "cols" and prepare them separated by comma 
    and adding the aggregate function and the alias of the table in order to use it in a query statement.

        Args:
            - alias (string): string with the name of the alias
            - cols (list): list that contains all the columns to be prepared
            - agg (string): string that contains the aggregate function to be applied. If it's Null it will mean that we don't need to prepare it for aggregation
            - tagline (string): string that contains the tagline that it's added at the end of the name of the column in case we want it

        Returns:
            - sql_cols (string): string that contains a prepared chunk of a SQL statement
    '''
    
    sql_cols = ''
    
    for i, c in enumerate (cols):
        if i > 0:
            sql_cols += f',{agg}({alias}.{c}) as {c}{tagline}' if agg and tagline else f',{agg}({alias}.{c}) as {c}' if agg and not tagline else f',{alias}.{c} as {c}{tagline}' if not agg and tagline else f',{alias}.{c}'
        else:
            sql_cols += f'{agg}({alias}.{c}) as {c}{tagline}' if agg and tagline else f'{agg}({alias}.{c}) as {c}' if agg and not tagline else f'{alias}.{c} as {c}{tagline}' if not agg and tagline else f'{alias}.{c}'
    
    return sql_cols
